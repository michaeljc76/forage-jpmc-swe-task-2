From 1e12e9808142d9811c9328485b1fe0fa54903079 Mon Sep 17 00:00:00 2001
From: Michael Crowley <nico404.site@gmail.com>
Date: Mon, 5 Feb 2024 14:13:25 -0500
Subject: [PATCH] Finished task-2

---
 package-lock.json | 11 +++++++++++
 package.json      |  1 +
 src/App.tsx       | 24 ++++++++++++++++++------
 src/Graph.tsx     |  9 +++++++--
 4 files changed, 37 insertions(+), 8 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index 21b4315..9a78f8f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -18,6 +18,7 @@
         "@types/react-dom": "^16.0.11",
         "bootstrap": "^4.2.1",
         "puppeteer": "^1.19.0",
+        "python-dateutil": "^0.0.1",
         "react": "^16.9.0",
         "react-dom": "^16.9.0",
         "react-scripts": "2.1.3"
@@ -15634,6 +15635,11 @@
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
       "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
     },
+    "node_modules/python-dateutil": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/python-dateutil/-/python-dateutil-0.0.1.tgz",
+      "integrity": "sha512-08SCbZUaueiaDSg+O3SfrrbYoMT5z0Kd54U+9JRMycGSnH9m9Tu/zZ/s7bjsJUwH3CQ9j7srd0kT0vwjQTvjwg=="
+    },
     "node_modules/q": {
       "version": "1.5.1",
       "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
@@ -32382,6 +32388,11 @@
         }
       }
     },
+    "python-dateutil": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/python-dateutil/-/python-dateutil-0.0.1.tgz",
+      "integrity": "sha512-08SCbZUaueiaDSg+O3SfrrbYoMT5z0Kd54U+9JRMycGSnH9m9Tu/zZ/s7bjsJUwH3CQ9j7srd0kT0vwjQTvjwg=="
+    },
     "q": {
       "version": "1.5.1",
       "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
diff --git a/package.json b/package.json
index ca234e9..2474125 100644
--- a/package.json
+++ b/package.json
@@ -13,6 +13,7 @@
     "@types/react-dom": "^16.0.11",
     "bootstrap": "^4.2.1",
     "puppeteer": "^1.19.0",
+    "python-dateutil": "^0.0.1",
     "react": "^16.9.0",
     "react-dom": "^16.9.0",
     "react-scripts": "2.1.3"
diff --git a/src/App.tsx b/src/App.tsx
index 0728518..8914fea 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,28 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if(this.state.showGraph){
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        this.setState({
+          data: serverResponds,
+          showGraph: true,
+        });
+      });
+      x++
+      if (x > 1000){
+        clearInterval(interval);
+      }
+    }, 100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..42cf157 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,11 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]')
+      elem.setAttribute('row-pivots', '["timestamp"]')
+      elem.setAttribute('columns', '["top_ask_price"]')
+      elem.setAttribute('aggregates', `{"stock":"distinct count", "top_ask_price":"avg", "top_bid_price":"avg","timestamp":"distinct count"}`)
     }
   }
 
-- 
2.38.1.windows.1

